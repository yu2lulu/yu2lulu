(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{359:function(n,e,r){"use strict";r.r(e);var a=r(22),t=Object(a.a)({},(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h2",{attrs:{id:"springmvc-介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-介绍"}},[n._v("#")]),n._v(" springMVC 介绍")]),n._v(" "),r("blockquote",[r("p",[n._v("SpringMVC 是一种基于 Java 的实现 MVC 设计模型的请求驱动类型的轻量级 Web 框架，属于SpringFrameWork\n的后续产品，已经融合在 Spring Web Flow 中。\nSpringMVC 已经成为目前最主流的MVC框架之一，并且随着Spring3.0 的发布，全面超越 Struts2，成为最优秀的\nMVC 框架。它通过一套注解，让一个简单的 Java 类成为处理请求的控制器，而无须实现任何接口。同时它还支持\nRESTful 编程风格的请求。")])]),n._v(" "),r("h2",{attrs:{id:"springmvc-idea快速入门步骤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-idea快速入门步骤"}},[n._v("#")]),n._v(" springMVC IDEA快速入门步骤")]),n._v(" "),r("ul",[r("li",[n._v("1.MAVEN和Tomcat安装环境配置(略)")]),n._v(" "),r("li",[n._v("2.新建MAVEN项目\n"),r("img",{attrs:{src:"/java/wiki/springmvc/IDEA%E5%88%9B%E5%BB%BA.jpg",alt:""}})]),n._v(" "),r("li",[n._v("3.pom文件添加依赖包")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("  <dependencies>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-tx</artifactId>\n      <version>5.3.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-core</artifactId>\n      <version>5.3.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-aop</artifactId>\n      <version>5.3.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>5.3.0</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-web</artifactId>\n      <version>5.1.9.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-webmvc</artifactId>\n      <version>5.1.9.RELEASE</version>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet</groupId>\n      <artifactId>javax.servlet-api</artifactId>\n      <version>4.0.1</version>\n    </dependency>\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <version>8.0.13</version>\n    </dependency>\n    <dependency>\n      <groupId>com.alibaba</groupId>\n      <artifactId>druid</artifactId>\n      <version>1.2.2</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-jdbc</artifactId>\n      <version>5.3.0</version>\n    </dependency>\n  </dependencies>\n")])])]),r("ul",[r("li",[n._v("4.配置web.xml的ContextLoaderListener\n"),r("ul",[r("li",[n._v("4.1 添加src/main/resources/applicationContext.xml spring容器文件")]),n._v(" "),r("li",[n._v("4.2 web.xml配置spring监听器使得启动tomcat自动加载applicationContext.xml文件")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("<context-param>\n  <param-name>contextConfigLocation</param-name>\n  <param-value>classpath:applicationContext.xml</param-value>\n</context-param>\n\n<listener>\n  \x3c!--默认会自动加载 默认变量contextConfigLocation 中的classpath:applicationContext.xml --\x3e\n  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  \n</listener>\n")])])])]),n._v(" "),r("li",[n._v("5.配置web.xml的DispatcherServlet\n"),r("ul",[r("li",[n._v("5.1 web.xml配置DispatcherServlet,加载spring-mvc配置文件")])])])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v("  <servlet>\n    <servlet-name>DispatcherServlet</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <init-param>\n      <param-name>contextConfigLocation</param-name>\n      \x3c!--加载springmvc配置文件--\x3e\n      <param-value>classpath:spring-mvc.xml</param-value>\n    </init-param>\n    \x3c!--启动tomcat自启动--\x3e\n    <load-on-startup>1</load-on-startup>\n  </servlet>\n\n  <servlet-mapping>\n    <servlet-name>DispatcherServlet</servlet-name>\n    <url-pattern>/</url-pattern>\n  </servlet-mapping>\n")])])]),r("ul",[r("li",[n._v("5.2 添加src/main/resources/spring-mvc.xml springMVC的配置文件,这里只做注解扫描")])]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xsi:schemaLocation="\n       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd">\n    \n    <context:component-scan base-package="it.web.controller"/>\n\n</beans>\n')])])]),r("ul",[r("li",[r("p",[n._v("6.配置tomcat\n"),r("img",{attrs:{src:"/java/wiki/springmvc/tomcat%E9%85%8D%E7%BD%AE.jpg",alt:""}})])]),n._v(" "),r("li",[r("p",[n._v("7.controller测试代码")])])]),n._v(" "),r("h4",{attrs:{id:"src-main-java-it-web-controller-indexcontroller-java"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#src-main-java-it-web-controller-indexcontroller-java"}},[n._v("#")]),n._v(" src/main/java/it/web/controller/indexController.java")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[n._v('@Controller\npublic class indexController {\n    @RequestMapping("/index")\n    @ResponseBody\n    public String index(){\n        System.out.println("index Controller running");\n        return "hello world";\n    }\n}\n')])])]),r("h2",{attrs:{id:"springmvc-请求参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-请求参数"}},[n._v("#")]),n._v(" springMVC 请求参数")]),n._v(" "),r("h2",{attrs:{id:"springmvc-响应数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-响应数据"}},[n._v("#")]),n._v(" springMVC 响应数据")]),n._v(" "),r("h2",{attrs:{id:"springmvc-拦截器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-拦截器"}},[n._v("#")]),n._v(" springMVC 拦截器")]),n._v(" "),r("h2",{attrs:{id:"springmvc-异常处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-异常处理"}},[n._v("#")]),n._v(" springMVC 异常处理")]),n._v(" "),r("h2",{attrs:{id:"springmvc-文件上传"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springmvc-文件上传"}},[n._v("#")]),n._v(" springMVC 文件上传")])])}),[],!1,null,null,null);e.default=t.exports}}]);