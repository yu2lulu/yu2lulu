(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{349:function(e,t,r){"use strict";r.r(t);var n=r(22),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"jdbc介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jdbc介绍"}},[e._v("#")]),e._v(" JDBC介绍")]),e._v(" "),r("h2",{attrs:{id:"statement和preparedstatement的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#statement和preparedstatement的关系"}},[e._v("#")]),e._v(" Statement和PreparedStatement的关系")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("都是用来执行SQL的,PreparedStatement extends Statement\nStatement适合执行静态(无条件)SQL,PreparedStatement适合执行动态(有条件)SQL\nPreparedStatement可以避免注入攻击\n")])])]),r("h2",{attrs:{id:"jdbc举例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jdbc举例"}},[e._v("#")]),e._v(" JDBC举例")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('Class.forName("com.mysql.cj.jdbc.Driver");  //注册驱动\nConnection connection = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/mysql", "root", "123456");  //获取mysql连接实例\n\nString sql = "select * from user where User=?";  // ?表示站位符\nPreparedStatement preparedStatement = connection.prepareStatement(sql);  //预编译SQL语句\npreparedStatement.setString(1,"root");  //对站位符号设置参数\nPreparedStatement preparedStatement = connection.prepareStatement(sql);\nResultSet resultSet = preparedStatement.executeQuery();\n\nwhile(resultSet.next()){  //指针往下指\n    String username = resultSet.getString("User" );\n    String authentication_string = resultSet.getString("authentication_string");\n    System.out.println(username+":"+authentication_string);\n}\n')])])]),r("h2",{attrs:{id:"连接池第三方工具"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#连接池第三方工具"}},[e._v("#")]),e._v(" 连接池第三方工具")]),e._v(" "),r("blockquote",[r("p",[e._v("JDBC的DriverManager每次调用它都创建一个新连接,它没有复用连接,它没有管理连接的上限,并发数过大时会导致数据库崩溃")]),e._v(" "),r("p",[e._v("常用连接池:DBCP/C3P0/Druid\n以Druid演示使用")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('1.db.properties放到src目录下面\n    driverClassName=com.mysql.cj.jdbc.Driver\n    url=jdbc:mysql://127.0.0.1:3306/mytest?characterEncoding=UTF-8\n    username=root\n    password=123456\n\n2.编写测试代码\n    Properties properties = new Properties();\n    InputStream propertisInputStream = mysqlhelper.class.getClassLoader().getResourceAsStream("db.properties");\n    properties.load(propertisInputStream);\n\n    DataSource dataSource = DruidDataSourceFactory.createDataSource(properties);  //创建datasource\n    Connection connection = dataSource.getConnection();  //从datasource中获取mysql连接\n\n    ....... //后续发送sql语句进行查询即可\n')])])]),r("h2",{attrs:{id:"commons-dbutils的使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#commons-dbutils的使用"}},[e._v("#")]),e._v(" commons-dbutils的使用")]),e._v(" "),r("blockquote",[r("p",[e._v("简化数据结果集的处理,[连接需要jdbc提供或者使用第三方连接池技术],commons-dbutils 是 Apache 组织提供的一个开源 JDBC工具类库，它是对JDBC的简单封装，学习成本极低，并且使用dbutils能极大简化jdbc编码的工作量，同时也不会影响程序的性能")])]),e._v(" "),r("p",[r("img",{attrs:{src:"/java/wiki/javaweb/jdbc/common-dbutils.jpg",alt:""}})]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('Connection connection = new mysqlhelper().getConnection();  //获取mysql连接实例\nQueryRunner queryRunner = new QueryRunner();  //创建commons-dbutils实例对象\nString sql = "select * from Userinfo where id > ?";  //查询语句\nList<Map<String, Object>> data = queryRunner.query(connection, sql, 0, new MapListHandler());\n\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);