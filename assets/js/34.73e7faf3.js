(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{338:function(e,t,n){"use strict";n.r(t);var a=n(22),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"敏感文件扫描"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#敏感文件扫描"}},[e._v("#")]),e._v(" 敏感文件扫描")]),e._v(" "),n("h3",{attrs:{id:"背景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[e._v("#")]),e._v(" 背景")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("主动扫描模式下,敏感目录文件的扫描无法递归获取网站不同路径的敏感文件，基于代理模式下更好的覆盖了不同路径下的敏感信息的获取,是刷src的必备利器")]),e._v(" "),n("h3",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[e._v("#")]),e._v(" 原理")]),e._v(" "),n("hr"),e._v(" "),n("p",[e._v("获取请求的报文的路径,拼接敏感路径和文件,判断响应内容是否为200来判断敏感文件目录是否存在")]),e._v(" "),n("h3",{attrs:{id:"代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[e._v("#")]),e._v(" 代码")]),e._v(" "),n("hr"),e._v(" "),n("h4",{attrs:{id:"敏感目录和文件配置路径-config-sensivefile-txt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#敏感目录和文件配置路径-config-sensivefile-txt"}},[e._v("#")]),e._v(" 敏感目录和文件配置路径:/config/sensiveFile.txt")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("1.zip\nweb.zip\nweb.rar\nwww.zip\nwww.rar\n.htpasswd\nphpinof.php\n/console/\n/manager/\n")])])]),n("h4",{attrs:{id:"项目代码路径-rules-filescan-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目代码路径-rules-filescan-js"}},[e._v("#")]),e._v(" 项目代码路径:/rules/filescan.js")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const httputil=require('../methods/httputil')\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar readline = require(\"readline\");\n\nfunction scan(url,headers){\n    const readliner = readline.createInterface({\n            input: fs.createReadStream(__dirname+'/../config/sensiveFile.txt'),\n        });\n         \n        readliner.on('line', function(chunk) {\n            //处理每一行数据\n            filename=chunk.toString()\n            var ret=httputil.request_get(url+'/'+filename,headers)\n            if(ret[0]==200){\n                console.log(ret[1])\n            }\n        });\n         \n        readliner.on('close', function() {\n            //文件读取结束\n    });\n}\n\nfunction scan_jsmapfile(url,headers){  //此处\n    var ret=httputil.request_get(url+\".map\",headers)\n    if(ret[0]==200){\n        console.log('jsmap文件泄漏:'+url+\".map\")\n    }\n}\n\nmodule.exports={\n    scan,\n    scan_jsmapfile\n}\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);